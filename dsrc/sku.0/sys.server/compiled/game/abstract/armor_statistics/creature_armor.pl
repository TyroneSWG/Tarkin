#!/usr/bin/perl

# Author: Brandon Reinhart
# Date:   05/15/03
#
# Creates creature armor abstracts from a datatable.

# Defines

$input_filename  = "creatureArmor2.txt";
@protTypes = ( "DT_blast", "DT_elemental_heat", "DT_elemental_cold", "DT_elemental_electrical", "DT_elemental_acid", "DT_energy", "DT_kinetic", "DT_stun" );

# Subroutines

sub dumpArmorData;

###
# main
###

# Create the creature armor abstracts.
print "\ncreating creature armor abstracts\n";
print "Input file: $input_filename\n";

# Open the input file.
open SCHMGRP, $input_filename or die "Couldn't open $input_filename: $!\n";

# Process each line.
$skip = 1;
while ( <SCHMGRP> )
{
	# Skip the first line (header info)
	if ( $skip > 0 )
	{
		$skip--;
		next;
	}
	
	# Dump the armor data for this line.
	dumpArmorData( $_ );
}

###
# dumpArmorData
###

sub dumpArmorData
{
	# Parse out the things we are interested in updating.
	@fields = split /\t/, $_[0];
	
	# Skip blank entries.
	if ( $fields[0] eq "" )
	{
		return;
	}
	print "processing $fields[0]\n";
	
	# Create an output file.
	my $outfile = "armor/creature/statistics_armor_$fields[0].tpf";
	open OUTFILE, ">$outfile" or die "Couldn't open $outfile for write: $!\n";
	
	# Print a header.
	print OUTFILE "// Armor abstract for $fields[0]\n";
	print OUTFILE "// Auto generated by creature_armor.pl\n\n";
	print OUTFILE "\@class armor_template 1\n\n";
	
	# Rating
	if ( $fields[11] eq "none" )
	{
		print OUTFILE "rating = AR_armorNone\n";
	}
	elsif ( $fields[11] eq "light" )
	{
		print OUTFILE "rating = AR_armorLight\n";
	}
	elsif ( $fields[11] eq "medium" )
	{
		print OUTFILE "rating = AR_armorMedium\n";
	}	
	elsif ( $fields[11] eq "heavy" )
	{
		print OUTFILE "rating = AR_armorHeavy\n";
	}
	
	# Effectiveness
	if ( $fields[2] eq "n/a" )
	{
		print OUTFILE "effectiveness = 0\n";
	}
	else
	{
		print OUTFILE "effectiveness = $fields[2]\n";
	}
	
	# Integrity?
	print OUTFILE "integrity = 100000\n";
	
	# Special Protection
	print OUTFILE "specialProtection = [";
	my $i = 3;
	my $x = 0;
	while ( $i<11 )
	{
		if ( $fields[$i] ne "n/a" )
		{
			if ( $fields[$i] > 0 )
			{
				if ( $x > 0 )
				{
					print OUTFILE ",";
				}
				$x++;
				print OUTFILE "\n\t[type = $protTypes[$i-3], effectiveness = $fields[$i]]";
			}
		}
		$i++;
	}
	print OUTFILE "]\n";
	
	# Encumbrance
	print OUTFILE "encumbrance[0] = 0\n";
	print OUTFILE "encumbrance[1] = 0\n";
	print OUTFILE "encumbrance[2] = 0\n";
	
	# Vulnerability
	print OUTFILE "vulnerability = 0";
	my $i = 3;
	while ( $i<11 )
	{
		if ( $fields[$i] ne "n/a" )
		{
			if ( $fields[$i] == 0 )
			{
				print OUTFILE " | $protTypes[$i-3]";
			}
		}
		$i++;
	}
	print OUTFILE "\n";
}

